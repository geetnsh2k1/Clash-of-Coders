# Generated by Django 3.1.3 on 2021-04-22 11:39

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Profile', '0002_auto_20210421_2100'),
    ]

    operations = [
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Contest_Name', models.CharField(max_length=50)),
                ('P_Name', models.CharField(max_length=100)),
                ('Output', models.FileField(upload_to='<django.db.models.fields.CharField>_<django.db.models.fields.CharField>/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['zip'])])),
                ('Score', models.CharField(default='0', max_length=100)),
                ('Previous', models.TextField(default='No previous submission.')),
                ('Profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Profile', to='Profile.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('[A-Za-z]{1}[A-Za-z0-9@#&*! ]{2,49}', 'Contest name must only contain alpha-numeric characters, @, #, &, * and ! only and must start with alphabet only and can be only upto 50 words.', 'Contest name must only contain alpha-numeric characters, @, #, &, * and ! only and must start with alphabet only and can be only upto 50 words.')])),
                ('Released', models.DateTimeField(auto_now_add=True)),
                ('Start', models.DateTimeField()),
                ('Duration', models.CharField(max_length=20)),
                ('End', models.DateTimeField()),
                ('Problem', models.FileField(upload_to='Problem_Statement/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf']), django.core.validators.FileExtensionValidator(allowed_extensions=['docx']), django.core.validators.FileExtensionValidator(allowed_extensions=['txt'])])),
                ('Check', models.FileField(upload_to='Check_File/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['py']), django.core.validators.FileExtensionValidator(allowed_extensions=['cpp']), django.core.validators.FileExtensionValidator(allowed_extensions=['c']), django.core.validators.FileExtensionValidator(allowed_extensions=['java'])])),
                ('Dataset', models.FileField(upload_to='<django.db.models.fields.CharField>_Dataset/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['zip'])])),
                ('Contenders', models.ManyToManyField(null=True, related_name='Contenders', to='Profile.Profile')),
            ],
        ),
    ]
